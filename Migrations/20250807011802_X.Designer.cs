// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaChatMVC.Data;

#nullable disable

namespace PruebaChatMVC.Migrations
{
    [DbContext(typeof(ChatPruebaDbContext))]
    [Migration("20250807011802_X")]
    partial class X
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaChatMVC.Models.Chats", b =>
                {
                    b.Property<Guid>("IdChat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("TypeOfChat")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdChat");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            IdChat = new Guid("d7917cfe-0e42-4f57-b237-8a44ae5d3d20"),
                            ChatName = "Chat de Daniel y Julio",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfChat = 0,
                            isDelete = false
                        });
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Messages", b =>
                {
                    b.Property<Guid>("idMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("IdChatSended")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserSender")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("visto")
                        .HasColumnType("bit");

                    b.HasKey("idMessage");

                    b.HasIndex("IdChatSended");

                    b.HasIndex("IdUserSender");

                    b.ToTable("MensajesEnviados");
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Participants", b =>
                {
                    b.Property<int>("IdParticipants")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParticipants"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("IdChat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdParticipants");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdUser");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            IdParticipants = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdChat = new Guid("d7917cfe-0e42-4f57-b237-8a44ae5d3d20"),
                            IdUser = new Guid("bacab9dc-ba71-49bf-be42-99dfeda0504c"),
                            isDelete = false
                        },
                        new
                        {
                            IdParticipants = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdChat = new Guid("d7917cfe-0e42-4f57-b237-8a44ae5d3d20"),
                            IdUser = new Guid("cc397046-0bb8-4406-8eb0-d5795ed51512"),
                            isDelete = false
                        });
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Users", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("pasword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUser = new Guid("bacab9dc-ba71-49bf-be42-99dfeda0504c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Daniel",
                            isDelete = false,
                            pasword = "123"
                        },
                        new
                        {
                            IdUser = new Guid("cc397046-0bb8-4406-8eb0-d5795ed51512"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Julio",
                            isDelete = false,
                            pasword = "456"
                        });
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Messages", b =>
                {
                    b.HasOne("PruebaChatMVC.Models.Chats", "ChatSended")
                        .WithMany("MessagesSendedToThisChat")
                        .HasForeignKey("IdChatSended")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RelacionChatMensajes");

                    b.HasOne("PruebaChatMVC.Models.Users", "UserSended")
                        .WithMany("UserSendMessage")
                        .HasForeignKey("IdUserSender")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RelacionUsuarioEmisor");

                    b.Navigation("ChatSended");

                    b.Navigation("UserSended");
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Participants", b =>
                {
                    b.HasOne("PruebaChatMVC.Models.Chats", "Chat")
                        .WithMany("ChatParticipants")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ChatParticipants");

                    b.HasOne("PruebaChatMVC.Models.Users", "UserInTheChat")
                        .WithMany("ParticipantInChat")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RelacionParticipantesChat");

                    b.Navigation("Chat");

                    b.Navigation("UserInTheChat");
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Chats", b =>
                {
                    b.Navigation("ChatParticipants");

                    b.Navigation("MessagesSendedToThisChat");
                });

            modelBuilder.Entity("PruebaChatMVC.Models.Users", b =>
                {
                    b.Navigation("ParticipantInChat");

                    b.Navigation("UserSendMessage");
                });
#pragma warning restore 612, 618
        }
    }
}
